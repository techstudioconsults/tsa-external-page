{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "jsx": true // Allows Parsing of JSX
    },
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    "plugin:jest/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:prettier/recommended" // Must be last to override all other linters
  ],
  "plugins": [
    "react",
    "simple-import-sort",
    "eslint-plugin-css-modules",
    "jest",
    "autofix"
  ],
  "rules": {
    // increase the severity of rules so they are auto-fixable
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "autofix/no-debugger": "error",
    "react/react-in-jsx-scope": [
      0,
      "off"
    ],
    "react/display-name": [
      "off"
    ],
    "react/prop-types": [
      0,
      "off"
    ],
    "react/no-unescaped-entities": [
      "off"
    ],
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error",
          "log"
        ]
      }
    ],
    "no-unused-vars": [
      1,
      {
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-uses-react": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off"
  },
  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "webpack.config.js"
      }
    },
    "react": {
      "version": "detect" // React version.
    }
  },
  "overrides": [
    // override "simple-import-sort" config
    {
      "files": [
        "*.js",
        "*.jsx",
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              [
                "^react",
                "^@?\\w"
              ],
              // Internal packages.
              [
                "^(@|components)(/.*|$)"
              ],
              // Side effect imports.
              [
                "^\\u0000"
              ],
              // Parent imports. Put `..` last.
              [
                "^\\.\\.(?!/?$)",
                "^\\.\\./?$"
              ],
              // Other relative imports. Put same-folder imports and `.` last.
              [
                "^\\./(?=.*/)(?!/?$)",
                "^\\.(?!/?$)",
                "^\\./?$"
              ],
              // Style imports.
              [
                "^.+\\.?(css)$"
              ]
            ]
          }
        ]
      }
    }
  ]
}